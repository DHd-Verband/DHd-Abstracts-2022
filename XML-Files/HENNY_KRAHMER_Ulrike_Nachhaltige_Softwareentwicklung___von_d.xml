<?xml version="1.0" encoding="UTF-8"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="DHd2022_161">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title type="full">
                    <title type="main">Nachhaltige Softwareentwicklung</title>
                    <title type="sub">Von der Inhouse-Lösung zur Open Source-Community am Beispiel von MerMEId</title>
                </title>
                <author>
                    <persName>
                        <surname>Henny-Krahmer</surname>
                        <forename>Ulrike</forename>
                    </persName>
                    <affiliation>Universität Rostock, Germany</affiliation>
                    <email>ulrike.henny-krahmer@uni-rostock.de</email>
                <idno type="ORCID">0000-0003-2852-065X</idno></author>
                <author>
                    <persName>
                        <surname>Stadler</surname>
                        <forename>Peter</forename>
                    </persName>
                    <affiliation>Universität Paderborn, Germany</affiliation>
                    <email>pstadler@mail.uni-paderborn.de</email>
                <idno type="ORCID">0000-0002-2544-1481</idno></author>
            </titleStmt>
            <editionStmt>
                <edition>
                    <date>2021-12-01T15:17:28.155399933</date>
                </edition>
            </editionStmt>
            <publicationStmt>
    <publisher>Universität Potsdam</publisher>
    <address>
        <addrLine>Netzwerk für Digitale Geisteswissenschaften</addrLine>  
        <addrLine>Am Neuen Palais 10</addrLine>
        <addrLine>14469 Potsdam</addrLine>
        <addrLine>Deutschland</addrLine>
    </address>
    <publisher>Fachhochschule Potsdam</publisher>
    <address>
        <addrLine>Kiepenheuerallee 5</addrLine>
        <addrLine>14469 Potsdam</addrLine>
        <addrLine>Deutschland</addrLine>
    </address>
</publicationStmt>
            <sourceDesc>
                <p>Converted from an OASIS Open Document</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <appInfo>
                <application ident="DHCONVALIDATOR" version="1.22">
                    <label>DHConvalidator</label>
                </application>
            </appInfo>
        </encodingDesc>
        <profileDesc>
            <textClass>
                <keywords scheme="ConfTool" n="category">
                    <term>Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="subcategory">
                    <term>Vortrag</term>
                </keywords>
                <keywords scheme="ConfTool" n="keywords">
                    <term>Nachhaltigkeit</term>
                    <term>Softwareentwicklung</term>
                    <term>MerMEId</term>
                    <term>Open Source</term>
                    <term>Community</term>
                </keywords>
                <keywords scheme="ConfTool" n="topics">
                    <term>Programmierung</term>
                    <term>Community-Bildung</term>
                    <term>Projektmanagement</term>
                    <term>Organisation</term>
                    <term>Software</term>
                </keywords>
            </textClass>
        <settingDesc><ab n="conference">DHd2022 – "Kulturen des digitalen Gedächtnisses", Potsdam</ab><ab n="paperID">161</ab></settingDesc></profileDesc>
    </teiHeader>
    <text>
        <body>
            <div type="div1" rend="DH-Heading1">
                <head>Einleitung</head>
                <p>
                    <anchor xml:id="id_docs-internal-guid-59d14467-7fff-7652-420f-ba38401d198c"/>Die nachhaltige Entwicklung und Verfügbarmachung von Forschungssoftware ist eine der zentralen Herausforderungen in den Digital Humanities. Während Praktiken der Überlieferung und Sicherung von Forschungsdaten schon einen gewissen Reifegrad erreicht haben, steckt die Kultur der Entwicklung eines digitalen Gedächtnisses in Bezug auf Software noch in den Anfängen (Katerbow 2018: 5-6). Nachhaltige Software soll ermöglichen, dass Forschung transparent und nachvollziehbar bleibt, indem Tools und Dienste langfristig auffindbar, einsehbar und möglichst ausführbar bleiben und gut dokumentiert sind. Auch geht es darum, Software nachnutzbar zu machen, damit Mittel für ihre Entwicklung effizient eingesetzt werden. Die Zielstellung nachhaltiger Software ist damit eng mit den Ideen verknüpft, die auch hinter den FAIR-Prinzipien stehen (Lamprecht et al. 2020, Hasselbring et al. 2020). Wie nachhaltig Forschungssoftware ist und sein kann, wird durch viele Faktoren bedingt, u.a. durch technische, organisatorische sowie politisch-soziale Aspekte. Es stellt sich die Frage, welche Kriterien dafür genau erfüllt sein müssen, wofür es bereits verschiedene Vorschläge gibt, u.a. aus einer allgemein-theoretischen Sicht (Stürmer et al. 2017), aus technischer Sicht (Druskat 2017) oder aus einer förderpolitisch motivierten Sicht (Anzt et al. 2021).
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-43d5447b-7fff-2ab7-52ac-3c391cd3cb47"/>
                    <hi rend="">Klar ist, dass nicht jede jemals entwickelte Forschungssoftware dauerhaft lauffähig gehalten werden kann. Für etablierte und verbreitete geisteswissenschaftliche Tools wie z.B. Stylo (Eder et al. 2016), CATMA (Gius et al. 2021), ediarum (Dumont et al. 2021) oder auch MerMEId (MerMEId Community 2021) ist dies jedoch anzustreben.</hi>
                    <hi rend=""><ref target="ftn1" n="1"/>
                    </hi>
                    <hi rend=""> </hi>
                    <hi rend="">Die Frage der Nachhaltigkeit solcher Forschungssoftware wird immer dringender, je länger die Software existiert und auch, je häufiger sie eingesetzt wird, um Forschungsergebnisse zu produzieren (zur Problematik zahlreiche softwarebasierte DH-Projekte langfristig zu erhalten siehe z.B. Smithies et al. 2019).</hi>
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-aeeada6f-7fff-d5d5-f0d7-ee4d39a42452"/>Dieser Beitrag zielt darauf, bestehende Kriterien für nachhaltige Softwareentwicklung am Beispiel des musikwissenschaftlichen Metadaten-Editors MerMEId zu diskutieren. Dabei wird insbesondere die Entwicklungsgeschichte der Software in den Blick genommen, da sie zunächst als Inhouse-Lösung entwickelt wurde und kürzlich in ein Community-Projekt umgewandelt worden ist. Auf der Grundlage der Erkenntnisse zu MerMEId wird die Anwendung der bisher hauptsächlich fachübergreifend formulierten Nachhaltigkeitskriterien auf geisteswissenschaftliche Forschungssoftware kritisch reflektiert.
                </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <anchor xml:id="id_docs-internal-guid-004541ce-7fff-6352-88f2-a07d831c5135"/>Kriterien für nachhaltige Forschungssoftware
                </head>
                <p>
                    <anchor xml:id="id_docs-internal-guid-96132c1d-7fff-bdb9-b006-6d9950518c15"/>
                    <hi rend="">Die Darstellung bestehender Kriterien für nachhaltige Softwareentwicklung beschränkt sich auf zwei Beispiele: auf der einen Seite praktische Auswahlkriterien für Forschungssoftware, die langfristig gefördert werden sollte (Anzt et al. 2021) und auf der anderen Seite abstraktere, allgemeine Bedingungen für die (auch soziale und ökologische) Nachhaltigkeit digitaler Artefakte und ihrer Ökosysteme (Stürmer et al. 2017). Es gibt weitere Vorschläge für Kriterien für gute oder nachhaltige Software, auf die hier nicht umfassend eingegangen werden kann. Die beiden ausgewählten Kriteriengruppen ergänzen sich durch die unterschiedliche Schwerpunktlegung gut und eröffnen je eigene Perspektiven auf die Nachhaltigkeit von Software. Sie wurden jedoch nicht speziell für geisteswissenschaftliche Forschungssoftware entwickelt.</hi>
                    <hi rend=""><ref target="ftn2" n="2"/>Im Folgenden werden die von Anzt et al. formulierten Kriterien sinngemäß wiedergegeben, da für die MerMEId im Einzelnen überprüft werden soll, ob sie erfüllt sind oder nicht:</hi>
                </p>
                <p>
                    <figure>
                        <graphic url="Pictures/c803390ba6992b163869b626eec4b010.png"/>
                        <head>Abb. 1: Nachhaltigkeitskriterien nach Anzt et al. 2021 (eigene Darstellung).</head>
                    </figure>
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-e01120b1-7fff-4b82-985f-22cc8cdde926"/>Den Hauptteil der Kriterien bei Anzt et al. machen die Transparenz und der Qualität der Software aus. Daneben zeigen die Bereiche “Nutzung und Impact” und “Reife”, dass eine dauerhafte Förderung für Anzt et al. auch davon abhängt, wie stark die Software tatsächlich genutzt wird und etabliert ist. Den recht detaillierten, direkt anwendbaren Kriterien von Anzt et al. stehen die theoretisch hergeleiteten Kriterien von Stürmer et al. (2017) gegenüber, denen das Konzept der digitalen Artefakte (Daten oder Code) zugrunde liegt. Diese benötigen eine technische und soziale Umgebung, um verarbeitet zu werden, und sind von einem sich veränderndem Ökosystem abhängig und davon, dass sie erstellt, verändert und genutzt werden. Aus dieser Eigenschaft leiten sich die in Abb. 2 gezeigten Grundbedingungen für Nachhaltigkeit ab.
                </p>
                <p>
                    <figure>
                        <graphic url="Pictures/5aeb6cc57939d9e7aa029d466b693048.png"/>
                        <head>Abb. 2: Grundbedingungen für Nachhaltigkeit nach Stürmer et al. 2017.</head>
                    </figure>
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-9d16f85b-7fff-bcc0-d8fa-4b2d67d8a443"/>Die Kriterien von Stürmer et al. sollen hier nicht im Einzelnen auf MerMEId angewandt werden, da sie sich in Teilen mit den Kriterien von Anzt et al. decken. Vor allem die Kriterien zum Ökosystem sind jedoch für MerMEId von Interesse, da sie den Blick verstärkt auf Aspekte der sozialen Umgebung lenken, was im Hinblick auf den Übergang der MerMEId von einer Inhouse-Lösung zu einer Community-Software besonders relevant ist. Sie werden daher in der Diskussion ergänzend berücksichtigt. Der Punkt “Shared tacit knowledge” z.B. bezieht sich darauf, dass individuelle Erfahrung und Kompetenz im Umgang mit digitalen Artefakten laufend sozial geteilt und externalisiert werden müssen, damit die Artefakte an die sich ständig ändernden Bedingungen angepasst und genutzt werden können. Dafür braucht es eine stimulierende Umgebung, was mit “Participatory culture” beschrieben wird, z.B. eine Open Source-Community, zu der gerne beigetragen wird, die aber auch durch Regeln, Normen und leitende Instanzen (“Good governance”) gesteuert werden muss.
                </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <anchor xml:id="id_docs-internal-guid-e580978d-7fff-1bbc-45d4-178e3634bec6"/>Fallbeispiel MerMEId
                </head>
                <p>
                    <anchor xml:id="id_docs-internal-guid-db9a42ba-7fff-685d-8237-4e231b0239d1"/>Die MerMEId ist ein "Metadata Editor and Repository for MEI Data", der zur Erstellung musikwissenschaftlicher (thematischer) Werkkataloge an der Königlichen Bibliothek zu Kopenhagen ab ca. 2009 entwickelt wurde. Obwohl MerMEId an erster Stelle für die eigenen Arbeiten des "Danish Centre for Music Editing" an dem "Catalogue of Carl Nielsen's Works" – dem später noch das Scheibe-Werkverzeichnis und das Hartmann-Werkverzeichnis folgen sollten – entwickelt wurde, waren doch die Entwickler Axel Teich Geertinger und Sigfrid Lundberg von Anfang an maßgeblich auch an der Gestaltung des noch jungen Datenstandards MEI beteiligt. MerMEId war dadurch frühzeitig in der MEI-Community bekannt und wurde daraufhin aktiv auf zahlreichen Workshops (z.B. bei der Edirom-Summer-School ab 2012) oder durch Konferenzbeiträge (z.B. bei der ersten MEC 2013 in Mainz) vorgestellt und verbreitet. Auch durch Axel Teich Geertingers Mitgliedschaft im MEI-Board (2015–16) und in der "Metadata and Cataloging Interest Group" gab es einen regen Austausch und wechselseitigen Einfluss zwischen dem MerMEId-Editor und dem MEI-Metadatenschema. Mehrere externe Projekte setzten daraufhin den MerMEId-Editor für die Erstellung von Werkkatalogen ein, darunter "Bruckner Online"<ref target="ftn3" n="3"/>, die Kataloge zu Johan Svendsen und Geirr Tveitt<ref target="ftn4" n="4"/>, der "Catalogue of the Works of Frederick Delius"<ref target="ftn5" n="5"/>, oder das "Bach Repertorium"<ref target="ftn6" n="6"/>.
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-95e8da7a-7fff-7592-96a8-b4a585810dd2"/>
                    <hi rend="">Die "Goldene Ära" von MerMEId endete dann aber 2019, als die Schließung des </hi>
                    <hi rend="italic">Danish Centre for Music Editing</hi>
                    <hi rend=""> beschlossen wurde und die Entwickler keine Kapazitäten mehr für Weiterentwicklung und Pflege von MerMEId aufwenden durften.</hi>
                    <hi rend=""><ref target="ftn7" n="7"/>
                    </hi>
                    <hi rend=""> Zu diesem Zeitpunkt war der Quellcode von MerMEId bereits unter einer Apache-2.0 OpenSource-Lizenz auf GitHub veröffentlicht, es gab eine MerMEId-Sandbox (Demo-Seite), sowie eine unorganisierte (i.e. es fehlten Instrumente wie Mailinglisten, Messenger o.ä.) Community von MerMEId-Nutzer*innen. </hi>
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-b2392850-7fff-61ec-5567-4a25ede5b7ea"/>
                    <hi rend="">Der </hi>
                    <hi rend="italic">Virtuelle Forschungsverbund Edirom</hi>
                    <hi rend=""> 'adoptierte' daraufhin das Projekt und ziemlich schnell stießen Kolleg*innen aus der ÖAW dazu. Als weitere informelle Anfragen eingingen und Interessenten auf den Plan traten wurde klar, dass diesem breiten Interesse nur durch eine echte Community-Struktur Rechnung getragen werden konnte. Als Community-Instrumente wurden neben dem vorhandenen Code-Repository inkl. </hi>
                    <hi rend="">Ticketsystem und Wiki bei GitHub auch monatliche (virtuelle) Community-Meetings installiert sowie ein eigener Kanal im MEI-Slack eingerichtet. Aktuell sind die Community-Aktivitäten noch sehr auf das Refactoring des Codes konzentriert, da als erster Meilenstein ein Release einer "Community-Edition" geplant ist. Diese soll noch keine wesentlichen Feature-Neuerungen enthalten, sondern zunächst eine Umgestaltung der Softwarearchitektur zum Zwecke der besseren Wartbarkeit und des einfacheren Deployments.</hi>
                </p>
                <div type="div2" rend="DH-Heading2">
                    <head>
                        <anchor xml:id="id_docs-internal-guid-5dd9c061-7fff-dd2c-8db6-d917bee33cf3"/>Anwendung der Nachhaltigkeitskriterien auf MerMEId
                    </head>
                    <p>
                        <anchor xml:id="id_docs-internal-guid-3c9af479-7fff-4a8d-eaa7-672214844559"/>Im Folgenden werden die Kriterien von Anzt et al. auf MerMEId angewandt und für jedes erfüllte Kriterium ein Punkt vergeben.
                    </p>
                    <div type="div3" rend="DH-Heading3">
                        <head>Nutzung und Impact: 3,5/5</head>
                        <p>
                            <anchor xml:id="id_docs-internal-guid-e22b044c-7fff-ec17-8759-7826bd93c7f2"/>Die meisten Kriterien zu Nutzung und Impact können für MerMEId positiv verbucht werden. Die Software wird in mehr als einer Forschungsgruppe eingesetzt (Kriterium 1) und sie ist auch die einzige Software, die das Problem eines anwenderfreundlichen Metadateneditors für MEI löst (Kriterium 4). Teilweise erfüllt ist das Kriterium 2 durch einen Aufsatz und ein Poster (Geertinger und Pugin 2011, Geertinger und Lundberg 2015). Auch das Kriterium 3 kann als teilweise erfüllt gelten, da es eine kurze Rezension von MerMEId gibt (Crandell 2015) und das Tool auf diversen Workshops vorgestellt wurde. Auch Kriterium 5 (Informations- und Lehrmaterialien) bewerten wir nur mit der halben Punktzahl, da sich im Git Repository von MerMEId zwar einige kleine Tutorials zu Spezialfällen finden, diese aber nicht als genuine Beispiele oder Tutorien für das Selbststudium gelten können.
                        </p>
                    </div>
                    <div type="div3" rend="DH-Heading3">
                        <head>Transparenz und Qualität der Software: 6,5/11</head>
                        <p>
                            <anchor xml:id="id_docs-internal-guid-827c6c31-7fff-8ec8-9734-efefd3a1b31e"/>Für die Kriterien 6, 7 und 9 kann das Code-Repo bei GitHub als Beleg dienen, in dem u.a. auch die geforderte FLOSS-Lizenz (Apache 2.0) angegeben ist. Daneben finden sich dort auch Beispieldaten, die zusammen mit der Sandbox-Umgebung das Kriterium 11 erfüllen. Teilweise (jeweils mit 0,5 gewertet) erfüllt sind die Forderungen nach Dokumentation (zu Kriterium 8 gibt es ein User-Manual sowie ein Wiki für Entwickler*innen, in dem auch die Software-Abhängigkeiten zu eXist und Orbeon Forms beschrieben sind), sowie die Releases (Kriterium 15). Es finden sich zwar tags in der Git-Versionsverwaltung und auch Container-Images werden bereitgestellt, allerdings gibt es keine "richtigen" Releases mit archivierbaren Binaries. Erweiterbarkeit (Kriterium 12), Interoperabilität (Kriterium 13) und Testing (Kriterium 14) müssen negativ beschieden werden, allein Kriterium 16 darf wieder positiv gewertet werden, da die Funktionalitäten von MerMEId ein Alleinstellungsmerkmal sind.
                        </p>
                    </div>
                    <div type="div3" rend="DH-Heading3">
                        <head>Reife: 3/5</head>
                        <p>
                            <anchor xml:id="id_docs-internal-guid-3058d06c-7fff-ff5c-7139-18e5c6c5119f"/>Für MerMEId gibt es keinen Software-Management-Plan (Kriterium 17) und es kann leider auch nicht behauptet werden, dass die Software einfach zu warten wäre (Kriterium 18). Die Kriterien 19–21 wiederum werden durch das GitHub-Repositorium dokumentiert bzw. erfüllt und auch im MerMEId Slack Channel und bei den monatlichen Community-Meetings treffen sich nicht nur Entwickler*innen, sondern auch Nutzer*innen zum Austausch.
                        </p>
                    </div>
                </div>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <anchor xml:id="id_docs-internal-guid-527d349a-7fff-4ad0-f6bb-71c6df51e980"/>Diskussion und Fazit
                </head>
                <p>
                    <anchor xml:id="id_docs-internal-guid-3b450fa9-7fff-9708-f0b3-8a98bcd07641"/>Die Anwendung der Kriterien von Anzt et al. auf MerMEId funktioniert zunächst sehr gut, d.h. die Kriterien sind klar definiert und lassen sich checklistenartig beantworten. An manchen Stellen haben wir uns mit halben Punkten beholfen, da die Kriterien nur teilweise erfüllt werden konnten, uns eine komplette Negierung aber zu stark erschien. Insgesamt gibt dieser Score (13/21 -&gt; 62%) unsere intuitive Verortung von MerMEId gut wieder: "es ist schon vieles gut, aber es gibt auch noch wesentliche Baustellen". Diese Baustellen lassen sich dank der Kriterien auch klar benennen und finden sich sowohl im Bereich der Qualität der Software als auch bei der Dokumentation.
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-7fc26155-7fff-fae1-9917-aaeb0b80f00a"/>Auffallend ist, dass sich der deutliche Bruch in der Organisation der Entwicklung (von zwei Hauptentwicklern aus derselben Institution hin zu einer internationalen Community) kaum in der Bewertung auswirkt. Obschon nicht explizit ausgeführt, würden sich die Kennzahlen kaum ändern, wenn man diese beiden Zeiträume getrennt auswerten würde. Dies mag zum einen daran liegen, dass die Community-Edition noch relativ jung ist und daher zeitlich noch keine signifikanten Änderungen bewirken konnte. Es fällt aber auf, dass die Art, wie die Entwicklung eines Softwareprojekts organisiert ist, insgesamt eine eher untergeordnete Rolle bei den Kriterien von Anzt et al. spielt. Betrachtet man die Umstellung von einer Inhouse-Lösung zur Open Source-Community mit Hilfe der Ökosystem-Kriterien von Stürmer et al., so schlägt der Systemwechsel stärker zu Buche. Eine offene Lizenzierung gab es in beiden Fällen, die übrigen vier Punkte “Shared tacit knowledge”, “Participatory culture”, “Good governance” und “Diversified funding” sind jedoch bei der Open Source-Community in wesentlich stärkerem Maße als bei der Inhouse-Lösung oder überhaupt erst erfüllt. Dies lässt hoffen, dass MerMEId als Community-Projekt nun gut aufgestellt ist, um nachhaltig weiterentwickelt zu werden. Allerdings werden bei Stürmer et al. als Open Source-Beispiele die Entwicklung des Linux-Kernels und Bitcoin diskutiert. Die Communities sind in diesen Fällen wesentlich größer und daher voraussichtlich stabiler als bei MerMEId, wo im jetzigen anfänglichen Stadium der Community-Entwicklung eine gute “Governance”, also eine gewisse Leitung und Steuerung der Community-Prozesse, noch sehr wichtig ist.
                </p>
                <p>
                    <anchor xml:id="id_docs-internal-guid-57a375e6-7fff-4d06-72de-9091a2f75baf"/>Zur Frage der Anwendbarkeit der allgemeinen Nachhaltigkeitskriterien auf DH-Projekte wie MerMEId kann festgehalten werden, dass solche Projekte tendenziell kleiner sind, in Bezug auf Mittel, Personal und auch ihre Wirkung. Quantitative Aspekte, wie sie bei Anzt et al. z.B. hinsichtlich Impact und Nutzung abgefragt werden, sind hier nicht unbedingt angemessen. In gleicher Weise stellt sich bei den Aspekten, die in Stürmer et al. zum Ökosystem genannt werden, die Frage, ob es bei kleineren DH-Softwareprojekten genug “kritische Masse” gibt, damit die Kriterien ihre positive Wirkung auf die Nachhaltigkeit entfalten können. Wir schließen daraus, dass es gerade bei DH-Projekten wie MerMEId essentiell ist, die weitere Entwicklung im Sinne eines Managements laufend im Blick zu behalten. So wie Anzt et al. (2021) fünfjährige Förderzyklen und Smithies et al. (2019) Managementpläne von gleicher Dauer vorschlagen, wird es auch für MerMEId erforderlich sein, “auf Sicht” zu fahren, die weitere Entwicklung der Software zu beobachten und regelmäßig zu bewerten, inwieweit Nachhaltigkeitskriterien erfüllt sind, um auf dieser Basis über die weitere aktive Entwicklung und Bewahrung der Software zu entscheiden. Neben technischen Aspekten kommt damit dem organisatorischen und sozialen Rahmen eine sehr wichtige Rolle für die Nachhaltigkeit der Softwareentwicklung zu.
                </p>
            </div>
        </body>
        <back><div type="notes"><note xml:id="ftn1" place="foot" n="1">Als geisteswissenschaftliche Forschungssoftware wird hier Software verstanden, die für die Forschungsgegenstände, -daten und -methoden der Geisteswissenschaften wesentliche Funktionalitäten bereitstellt, für diese Zwecke entwickelt wurde oder entsprechend eingesetzt wird, z.B. Tools zur Textanalyse oder -annotation oder Werkzeuge zur Erfassung und Präsentation von edierten Texten und Metadaten, um nur einige Beispiele zu nennen.</note><note xml:id="ftn2" place="foot" n="2">Es gibt allerdings auch bereits spezifischere Vorschläge aus den DH, wie z.B. die “Criteria for Reviewing Tools and Environments for Digital Scholarly Editing” (Sichani und Spadini 2018) und die “Handreichung zur Rezension von Forschungssoftware in den Altertumswissenschaften” (Homburg et al. 2020), die allerdings beide die Qualität von Software im Allgemeinen adressieren und nicht primär ihre Nachhaltigkeit, auch wenn beides zusammenhängt.</note><note xml:id="ftn3" place="foot" n="3"><ptr target="http://www.bruckner-online.at/"/> [letzter Zugriff 3. Juli 2021].
                    </note><note xml:id="ftn4" place="foot" n="4"><ptr target="https://www.musikkarven.no/english/work-catalogues/index.html"/> [letzter Zugriff 3. Juli 2021].
                    </note><note xml:id="ftn5" place="foot" n="5"><ptr target="https://delius.music.ox.ac.uk/catalogue/welcome.html"/> [letzter Zugriff 3. Juli 2021].
                    </note><note xml:id="ftn6" place="foot" n="6"><ptr target="https://www.bach-leipzig.de/de/bach-archiv/bach-repertorium"/> [letzter Zugriff 3. Juli 2021].
                    </note><note xml:id="ftn7" place="foot" n="7">Die offizielle Schließung datiert vom 1. Mai 2020, die Git-Aktivitäten enden aber bereits am 13. August 2019.</note></div>
            <div type="bibliogr">
                <listBibl>
                    <head>Bibliographie</head>
                    <bibl>
                        <hi rend="bold">Anzt, Hartwig / Bach, Felix / Druskat, Stephan / Löffler, Frank / Loewe, Axel / Renard, Bernhard Y. / Seemann, Gunnar / Struck, Alexander et al.</hi>
                        <hi rend=""> (2021): „An environment for sustainable research software in Germany and beyond: current state, open challenges, and </hi>
                        <hi rend="">call for action [version 2; peer review: 2 approved]“, </hi>
                        <hi rend="">in:</hi>
                        <hi rend=""> </hi>
                        <hi rend="italic">F1000Research</hi>
                        <hi rend=""> </hi>
                        <hi rend="">9:295 10.12688/f1000research.23224.2.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Crandell, Adam</hi> (2015): „Review of MerMEId: Metadata Editor and Repository for MEI Data, by The National Library, Danish Centre for Music Publication“, in: 
                        <hi rend="italic">Notes</hi> 71 (3): 543-544 10.1353/not.2015.0037.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Druskat, Stephan</hi>
                        <hi rend=""> (2017): “Kriterienbasierte Evaluation und Dokumentation technischer Nachhaltigkeit von Forschungssoftware in einem Metadatenrepositorium”, </hi>
                        <hi rend="">in: </hi>
                        <hi rend="italic">DHd 2017. Digitale Nachhaltigkeit. Konferenzabstracts. Universität Bern, 13.-18. Februar 2017</hi>
                        <hi rend=""> </hi>
                        <hi rend="">253-255 10.5281/zenodo.4622669.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Dumont, Stefan / Fechner, Martin / Grabsch, Sascha</hi>
                        <hi rend=""> (2021): </hi>
                        <hi rend="italic">ediarum.</hi>
                        <hi rend=""> </hi>
                        <ptr target="https://www.ediarum.org/"/>
                        <hi rend="">. GitHub: </hi>
                        <ptr target="https://github.com/ediarum"/>
                        <hi rend=""> </hi>
                        <hi rend="">[letzter Zugriff 15. Juli 2021]</hi>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Eder, Maciej / Rybicki, Jan / Kestemont, Mike</hi>
                        <hi rend=""> (2016): „Stylometry with R: A Package for Computational Text Analysis“, </hi>
                        <hi rend="">in: </hi>
                        <hi rend="italic">The R Journal</hi>.
                        <hi rend="">8 (1): 107–121.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Geertinger, Axel Teich / Pugin, Laurent </hi>(2011): „MEI for bridging the gap between music cataloguing and digital critical edition“, in: 
                        <hi rend="italic">Die Tonkunst</hi> 5 (3): 289-294.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Geertinger, Axel Teich / Lundberg, Siegfried</hi>
                        <hi rend=""> (2015): „MerMEId: Creating Thematic Catalogues Using MEI Metadata“, </hi>
                        <hi rend="">in: Roland, Perry / and Kepper, Johannes (eds.):</hi>
                        <hi rend="italic">Music Encoding Conference Proceedings 2013 and 2014.</hi>
                        <hi rend="">Bavarian State Library (BSB) 122–126. URN: </hi>
                        <ptr target="http://nbn-resolving.de/urn:nbn:de:bvb:12-babs2-0000007812"/>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Gius, Evelyn / Meister, Jan Christoph / Meister, Malte / Petris, Marco / Bruck, Christian / Jacke, Janina / Schumacher, Mareike / Gerstorfer, Dominik / Flüh, Marie / Horstmann, Jan </hi>
                        <hi rend="">(2021): </hi>
                        <hi rend="italic">CATMA 6 (Version 6.3).</hi>
                        <hi rend="">Zenodo 10.5281/zenodo.1470118.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Hasselbring, Wilhelm / Carr, Leslie / Hettrick, Simon / Packer, Heather / Tiropanis, Thanassis</hi> (2020):
                        <hi rend="">„From FAIR research data toward FAIR and open research software“, </hi>
                        <hi rend="">in:</hi>
                        <hi rend="italic">it - Information Technology</hi>
                        <hi rend="">62 (1): 39–47 10.1515/itit-2019-0040.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Homburg, Timo / Klammt, Anne / Mara, Hubert / Schmid, Clemens / Schmidt, Sophie Charlotte / Thiery, Florian / Trognitz, Martina</hi>
                        <hi rend="">(2020): „Diskussionsbeitrag - Handreichung zur Rezension von Forschungssoftware in den Altertumswissenschaften / Impulse - Recommendations for the review of archaeological research software.“ </hi>
                        <hi rend="italic">GitHub.</hi>
                        <ptr target="https://research-squirrel-engineers.github.io/Impuls_SoftwareRezensionen_DGUF/Draft.htm"/>
                        <hi rend="">[letzter Zugriff 15. Juli 2021].</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Katerbow, Matthias / Feulner, Georg</hi>
                        <hi rend="">(2018): </hi>
                        <hi rend="italic">Handreichung zum Umgang mit Forschungssoftware.</hi>
                        <hi rend="">Hrsg. von der Schwerpunktinitiative Digital Information der Allianz der deutschen Wissenschaftsorganisationen 10.5281/zenodo.1172970.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Lamprecht, Anna-Lena / Garcia, Leyla / Kuzak, Mateusz / Martinez, Carlos / Arcila, Ricardo / Martin Del Pico, Eva / Dominguez Del Angel, Victoria et al.</hi>
                        <hi rend=""> (2020): „Towards FAIR principles for research software“,</hi>
                        <hi rend="">in:</hi>
                        <hi rend="italic">Data Science</hi>
                        <hi rend="">3 (1): 37–59 10.3233/DS-190026.</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">MerMEId Community (2021). MerMEId. GitHub.com.</hi>
                        <ptr target="https://github.com/Edirom/MerMEId"/>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Sichani, Anna-Maria / Spadini, Elena and the members of the IDE</hi>
                        <hi rend="">(2018): </hi>
                        <hi rend="italic">Criteria for Reviewing Tools and Environments for Digital Scholarly Editing, version 1.0.</hi>
                        <ptr target="https://www.i-d-e.de/publikationen/weitereschriften/criteria-tools-version-1/"/>
                        <hi rend="">[letzter Zugriff 15. Juli 2021].</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Smithies, James / Westling, Carina / Sichani, Anna-Maria / Mellen, Parn / Ciula, Arianna</hi>
                        <hi rend=""> (2019): „Managing 100 Digital Humanities Projects: Digital Scholarship &amp; Archiving in King‘s Digital Lab“, </hi>
                        <hi rend="">in:</hi>
                        <hi rend="italic">Digital Humanities Quarterly</hi>
                        <hi rend="">13 (1). </hi>
                        <ptr target="http://www.digitalhumanities.org/dhq/vol/13/1/000411/000411.html"/>
                        <hi rend="">[letzter Zugriff 15. Juli 2021].</hi>
                    </bibl>
                    <bibl>
                        <hi rend="bold">Stürmer, Matthias / Abu-Tayeh, Gabriel / Myrach, Thomas</hi>
                        <hi rend=""> (2017): „Digital sustainability: basic conditions for sustainable digital artifacts and their ecosystems“, </hi>
                        <hi rend="">in:</hi>
                        <hi rend="italic">Sustainability Science</hi>
                        <hi rend="">12 (2): 247-262 10.1007/s11625-016-0412-2.</hi>
                    </bibl>
                </listBibl>
            </div>
        </back>
    </text>
</TEI>
